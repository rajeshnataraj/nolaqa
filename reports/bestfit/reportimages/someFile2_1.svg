<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="400" height="400" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" onload="init()" xmlns="http://www.w3.org/2000/svg"><script type="application/ecmascript">// <![CDATA[
var tooltipOn='', initfns=['ttEvt'], tips={e3:'53',e6:'47'};
function getE(i){return document.getElementById(i)}
function setattr(i,a,v){i.setAttributeNS(null,a,v)}
function newel(e,a){
  var ns='http://www.w3.org/2000/svg', ne=document.createElementNS(ns,e),i;
  for(i in a)
    setattr(ne, i, a[i]);
  return ne;
}
function showhide(e,h){setattr(e,'visibility',h?'visible':'hidden');}
function svgCoords(e) {
  var d = e.target.correspondingUseElement || e.target, m;
  while(d.parentNode && d.nodeName != 'svg')
    d = d.parentNode;
  m = d.getScreenCTM ? d.getScreenCTM() : {e:0,f:0};
  return [m.e,m.f];
}
function tooltip(e,callback,on,param) {
  var tt = getE('tooltip'), rect = getE('ttrect'), shadow = getE('ttshdw'),
    offset = 10,
    x = e.clientX + offset, y = e.clientY + offset, inner, brect, bw, bh,
    sw, sh, pos = svgCoords(e),
    de = e.target.correspondingUseElement || e.target;
  while(de.parentNode && de.nodeName != 'svg')
    de = de.parentNode;
  if(on && !tt) {
    tt = newel('g',{id:'tooltip',visibility:'visible'});
    rect = newel('rect',{
      stroke: 'black',
      'stroke-width': '1px',
      fill: '#ffffcc',
      width:'10px',height:'10px',
      id: 'ttrect',
      rx:'0px',ry:'0px'
    });
    shadow = newel('rect',{
      fill: 'rgba(0,0,0,0.3)',
      x:'1.5px',y:'1.5px',
      width:'10px',height:'10px',
      id: 'ttshdw',
      rx:'0px',ry:'0px'
    });
    tt.appendChild(shadow);
    tt.appendChild(rect);
  }
  if(tt) {
    if(on) {
      if(tt.parentNode && tt.parentNode != de)
        tt.parentNode.removeChild(tt);
      x -= pos[0];
      y -= pos[1];
      de.appendChild(tt);
    }
    showhide(tt,on);
  }
  inner = callback(e,tt,on,param);
  if(inner && on) {
    brect = inner.getBBox();
    bw = Math.ceil(brect.width + 6);
    bh = Math.ceil(brect.height + 6);
    setattr(rect, 'width', bw + 'px');
    setattr(rect, 'height', bh + 'px');
    setattr(inner, 'transform', 'translate(' + (bw / 2) + ',0)');
    if(shadow) {
      setattr(shadow, 'width', (bw + 1) + 'px');
      setattr(shadow, 'height', (bh + 1) + 'px');
    }
    if(bw + x > 397.5) {
      x -= bw + offset * 2;
      x = Math.max(x, 0);
    }
    if(bh + y > 397.5) {
      y -= bh + offset * 2;
      y = Math.max(y, 0);
    }
  }
  on && setattr(tt,'transform','translate('+x+' '+y+')');
  tooltipOn = on ? 1 : 0;
}
function newtext(c){return document.createTextNode(c)}
function texttt(e,tt,on,t){
  var ttt = getE('tooltiptext'), lines, i, ts, xpos;
  if(on) {
    lines = t.split('\\n');
    xpos = '3px';
    if(!ttt) {
      ttt = newel('g', {
        id: 'tooltiptext',
        fill: 'black',
        'font-size': '10px',
        'font-family': 'sans-serif',
        'font-weight': 'normal',
        'text-anchor': 'middle'
      });
      tt.appendChild(ttt);
    }
    while(ttt.childNodes.length > 0)
      ttt.removeChild(ttt.childNodes[0]);
    for(i = 0; i < lines.length; ++i) {
      ts = newel('text', { y: (13 * (i + 1)) + 'px' });
      ts.appendChild(newtext(lines[i]));
      ttt.appendChild(ts);
    }
  }
  ttt && showhide(ttt,on);
  return ttt;
}
function finditem(e,list) {
  var l = e.target.correspondingUseElement || e.target, t;
  while(!t && l.parentNode) {
    t = l.id && list[l.id]
    l = l.parentNode;
  }
  return t;
}
function init() {
  if(!document.addEventListener || !initfns)
    return;
  for(var f in initfns)
    eval(initfns[f] + '()');
}
function ttEvt() {
  document.addEventListener && document.addEventListener('mousemove',
    function(e) {
      var t = finditem(e,tips);
      if(t || tooltipOn)
        tooltip(e,texttt,t,t);
    },false);
}

setTimeout(function(){init()},20);
// ]]></script>
<defs><linearGradient id="e5" x1="0" x2="0" y1="0" y2="100%"><stop offset="0%" stop-color="red"/>
<stop offset="100%" stop-color="white"/>
</linearGradient>
</defs>
<rect width="100%" height="100%" fill="#fff" stroke-width="0px"/>
<text font-size="12px" font-family="sans-serif" font-weight="normal" text-anchor="middle" fill="black" x="32" y="200" transform="rotate(270,32,200)">percent covered</text>
<path d="M65 328h315M65 296.9h315M65 265.8h315M65 234.7h315M65 203.6h315M65 172.5h315M65 141.4h315M65 110.3h315M65 79.2h315M65 48.1h315M65 17h315" stroke="#666"/>
<rect width="147.5" x="227.5" y="182" height="146" id="e6" style="stroke:#000;stroke-width:1px;fill:url(#e5);"/>
<path d="M65 331v-3M222.5 331v-3M380 331v-3M62 328h3M62 296.9h3M62 265.8h3M62 234.7h3M62 203.6h3M62 172.5h3M62 141.4h3M62 110.3h3M62 79.2h3M62 48.1h3M62 17h3" stroke-width="1px" stroke="#333"/>
<g stroke-width="2px" stroke="#333"><path d="M63 328h319"/>
<path d="M65 15v315"/>
</g>
<g font-size="10px" font-family="Georgia" fill="#333"><g text-anchor="end"><text x="60" y="331">0</text>
<text x="60" y="299.9">10</text>
<text x="60" y="268.8">20</text>
<text x="60" y="237.7">30</text>
<text x="60" y="206.6">40</text>
<text x="60" y="175.5">50</text>
<text x="60" y="144.4">60</text>
<text x="60" y="113.3">70</text>
<text x="60" y="82.2">80</text>
<text x="60" y="51.1">90</text>
<text x="60" y="20">100</text>
</g>
<g text-anchor="end"><text y="340" x="146.75" transform="rotate(-90,143.75,337)">Grade Five</text>
<text y="340" x="304.25" transform="rotate(-90,301.25,337)">Grade Six</text>
</g>
</g>
</svg>
